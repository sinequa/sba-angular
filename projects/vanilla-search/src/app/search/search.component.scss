.main {
    margin-top: 1rem;
    margin-bottom: 20px;
}

#logo {
    content: url("^assets/sinequa-logo-light-sm.png");
    width: 40px;
    max-height: 40px;

    @media ( min-width: 1200px ) {
        content: url("^assets/sinequa-logo-light-lg.png");
        width: 160px;
    }
}

:host-context(body.dark) {
    #logo {
        content: url("^assets/sinequa-logo-dark-sm.png");
        width: 40px;
        max-height: 40px;

        @media ( min-width: 1200px ) {
            content: url("^assets/sinequa-logo-dark-lg.png");
            width: 160px;
        }
    }
}

.sq-facet-bar {
    position: relative;
    z-index: 1; // This is needed for dropdown menus from the facet actions not to be masked by the sq-filters-view which has position: relative
}

// Styling of the result items
.record {
    display: flex;
    overflow: hidden;
    cursor: pointer;

    --sq-record-padding-x: 15px;
    --sq-record-padding-y: 0.5em;

    padding: var(--sq-record-padding-y) var(--sq-record-padding-x);
    margin: 0 calc(var(--sq-record-padding-x) * -1);

    &:hover {
        background-color: rgb(0, 0, 0, 0.03);
    }

    &.selected {
        background-color: rgb(0, 0, 0, 0.05);
    }

    &.duplicate {
        sq-result-extracts, sq-result-duplicates, sq-missing-terms, sq-result-thumbnail {
            display: none !important;
        }
        sq-result-duplicates-spacer {
            margin: calc(var(--sq-record-padding-y) * -1) 0.5rem; // This negative margin cancels the padding from the .record, which allows the spacer to take 100% height
        }
        &:has(+.duplicate) sq-result-duplicates-spacer {
            height: auto; // Override the default height of this component so it takes 100% height
        }
    }

    .flex-grow-1 {
        min-width: 0; // force the flex item to shrink to the parent size
    }
}

// Selection / Action bar on top of results (position: fixed)
.card-action-bar {
    bottom: 10px;
    margin-left: 15px;
    z-index: 4;
}

// The default view in the mini preview when nothing is selected
.no-record ::ng-deep {
    .card {
        height: min(100vh, 100vh - 120px);
    }
    sq-collapse {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: clip; // similar to hidden, but forbids all scrolling
    }

    img {
        width: 10rem;
    }

    p {
        max-width: 50%;
        margin: auto;
    }
}

.app-search-form {
    flex-grow: 100;
    min-height: 41px;
}

/** ANIMATIONS **/
nav {
    opacity: .1;
    animation: apparition 0.8s ease-out forwards;
}

main,
.record {
    will-change: transform;
    opacity: 0;
    transform: translateY(50px);
    animation: apparition 0.8s ease-out forwards;
}

@keyframes apparition {
    100% {
        opacity: 1;
        transform: none;
    }
}
